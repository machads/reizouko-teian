#!/usr/bin/env node

const { spawn, exec } = require('child_process');
const path = require('path');
const http = require('http');

console.log('­Ъџђ тєиУћхт║ФсЃгсѓисЃћТЈљТАѕсѓбсЃЌсЃфсѓњУхитІЋсЂЌсЂдсЂёсЂЙсЂЎ...\n');

// сЃљсЃЃсѓ»сѓесЃ│сЃЅсЂ«сЃЉсЃЃсѓ▒сЃ╝сѓИсЂїтГўтюесЂЎсѓІсЂІсЃЂсѓДсЃЃсѓ»
const backendPath = path.join(__dirname, '..', 'backend');
const fs = require('fs');

if (!fs.existsSync(path.join(backendPath, 'node_modules'))) {
    console.log('­ЪЊд сЃљсЃЃсѓ»сѓесЃ│сЃЅсЂ«СЙЮтГўжќбС┐ѓсѓњсѓцсЃ│сѓ╣сЃѕсЃ╝сЃФсЂЌсЂдсЂёсЂЙсЂЎ...');
    exec('npm install', { cwd: backendPath }, (error, stdout, stderr) => {
        if (error) {
            console.error('РЮї сЃљсЃЃсѓ»сѓесЃ│сЃЅсЂ«сѓцсЃ│сѓ╣сЃѕсЃ╝сЃФсЂФтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪ:', error);
            return;
        }
        console.log('РюЁ сЃљсЃЃсѓ»сѓесЃ│сЃЅсЂ«сѓцсЃ│сѓ╣сЃѕсЃ╝сЃФсЂїт«їС║єсЂЌсЂЙсЂЌсЂЪ\n');
        startServers();
    });
} else {
    startServers();
}

function startServers() {
    console.log('­ЪћД сѓхсЃ╝сЃљсЃ╝сѓњУхитІЋсЂЌсЂдсЂёсЂЙсЂЎ...\n');
    
    // сЃљсЃЃсѓ»сѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сѓњУхитІЋ
    console.log('­ЪЊА сЃљсЃЃсѓ»сѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сѓњУхитІЋСИГ (сЃЮсЃ╝сЃѕ3000)...');
    const backend = spawn('npm', ['start'], {
        cwd: backendPath,
        stdio: 'pipe',
        shell: true
    });

    backend.stdout.on('data', (data) => {
        console.log(`[Backend] ${data.toString().trim()}`);
    });

    backend.stderr.on('data', (data) => {
        console.error(`[Backend Error] ${data.toString().trim()}`);
    });

    // сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сѓњУхитІЋ№╝ѕт░ЉсЂЌжЂЁсѓЅсЂЏсЂдУхитІЋ№╝Ѕ
    setTimeout(() => {
        console.log('­Ъїљ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сѓњУхитІЋСИГ (сЃЮсЃ╝сЃѕ8080)...');
        
        // УцЄТЋ░сЂ«Тќ╣Т│ЋсѓњУЕдсЂЎ
        const frontendCommands = [
            'npx http-server . -p 8080 -o',
            'python -m http.server 8080',
            'python3 -m http.server 8080'
        ];

        function tryStartFrontend(commandIndex = 0) {
            if (commandIndex >= frontendCommands.length) {
                console.log('РЮї сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сЂ«УхитІЋсЂФтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪ');
                console.log('­ЪЊЮ ТЅІтІЋсЂДсЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓњжќІсЂёсЂдсЂЈсЂасЂЋсЂё: frontend/index.html');
                return;
            }

            const cmd = frontendCommands[commandIndex].split(' ');
            const frontend = spawn(cmd[0], cmd.slice(1), {
                cwd: __dirname + '/..',
                stdio: 'pipe',
                shell: true
            });

            frontend.on('error', (err) => {
                console.log(`Рџа№ИЈ  ${frontendCommands[commandIndex]} сЂїтѕЕућесЂДсЂЇсЂЙсЂЏсѓЊ`);
                tryStartFrontend(commandIndex + 1);
            });

            frontend.stdout.on('data', (data) => {
                const output = data.toString();
                if (output.includes('8080') || output.includes('server')) {
                    console.log(`[Frontend] ${output.trim()}`);
                }
            });

            frontend.stderr.on('data', (data) => {
                const error = data.toString();
                if (!error.includes('EADDRINUSE')) {
                    console.error(`[Frontend] ${error.trim()}`);
                }
            });

            // сѓхсЃ╝сЃљсЃ╝сЂїУхитІЋсЂЌсЂЪсЂІсЃЂсѓДсЃЃсѓ»
            setTimeout(() => {
                checkServerAndOpenBrowser(frontend, commandIndex);
            }, 2000);
        }

        tryStartFrontend();
    }, 3000);
}

function checkServerAndOpenBrowser(frontend, commandIndex) {
    const req = http.get('http://localhost:8080', (res) => {
        console.log('РюЁ сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сЂїУхитІЋсЂЌсЂЙсЂЌсЂЪ!');
        console.log('\n­ЪјЅ сѓбсЃЌсЃфсЂїтѕЕућетЈ»УЃйсЂДсЂЎ:');
        console.log('   сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅ: http://localhost:8080');
        console.log('   сЃљсЃЃсѓ»сѓесЃ│сЃЅ:   http://localhost:3000');
        console.log('\n­ЪЊќ Сй┐ућеТќ╣Т│Ћ:');
        console.log('   1. сЃќсЃЕсѓдсѓХсЂДhttp://localhost:8080сѓњжќІсЂЈ');
        console.log('   2. жБЪТЮљсѓњтЁЦтіЏсЂЌсЂдсЃгсѓисЃћсѓњТЈљТАѕсЂЌсЂдсѓѓсѓЅсЂє');
        console.log('\nРџа№ИЈ  ухѓС║єсЂЎсѓІсЂФсЂ» Ctrl+C сѓњТі╝сЂЌсЂдсЂЈсЂасЂЋсЂё\n');
        
        // сЃќсЃЕсѓдсѓХсѓњжќІсЂЈ
        openBrowser('http://localhost:8080');
    });

    req.on('error', (err) => {
        console.log('Рџа№ИЈ  сЃЋсЃГсЃ│сЃѕсѓесЃ│сЃЅсѓхсЃ╝сЃљсЃ╝сЂ«УхитІЋсѓњуб║УфЇСИГ...');
        setTimeout(() => {
            checkServerAndOpenBrowser(frontend, commandIndex);
        }, 2000);
    });
}

function openBrowser(url) {
    const start = (process.platform === 'darwin' ? 'open' :
                   process.platform === 'win32' ? 'start' : 'xdg-open');
    
    exec(`${start} ${url}`, (error) => {
        if (error) {
            console.log('­ЪЊЮ сЃќсЃЕсѓдсѓХсѓњТЅІтІЋсЂДжќІсЂёсЂдсЂЈсЂасЂЋсЂё:', url);
        } else {
            console.log('­Ъїљ сЃќсЃЕсѓдсѓХсЂДсѓбсЃЌсЃфсѓњжќІсЂЇсЂЙсЂЌсЂЪ');
        }
    });
}

// Ctrl+C сЂДсЂ«ухѓС║єтЄдуљє
process.on('SIGINT', () => {
    console.log('\n­ЪЉІ сѓбсЃЌсЃфсѓњухѓС║єсЂЌсЂдсЂёсЂЙсЂЎ...');
    process.exit(0);
});